@import url("./radio.css");
@import url("./button.css");
@import url("./input.css");
@import url("./hamster.css");

/* 
  giving full w,h to whole body and setting bg photo
*/
body {
  width: 100vw;
  height: 100vh;
  margin: 0;
  padding: 0;
  background: url("../assets/bg.png") no-repeat center fixed;
  background-size: cover;
  font-family: "Times New Roman", Times, serif;
}

/* 
  positioning elements in the main tag
*/
main {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* 
setting basic styles like positioning in rows, font, color, over-flow management, w, h and bg color for app container
curving the box using border-radius
giving scroll ability on when overflow on y axis is happened
using blur to give bg some glass effect
*/

.app {
  color: azure;
  font-weight: 500;
  width: 50%;
  min-width: fit-content;
  height: 90%;
  border: rgb(248, 160, 28) 3px solid;
  border-radius: 20% 26px 28px 10%;
  background: rgba(74, 153, 233, 0.3);
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(6.1px);
  -webkit-backdrop-filter: blur(6.1px);
  overflow-x: hidden;
  position: relative;
  overflow-y: auto;
  display: flex;
  /* flex-direction: column; */
}

/* 
  styles for app header (which is in the side rn),
  setting bg colors fonts, element positioning and etc 

*/
.app > header {
  font-weight: bold;
  color: rgb(252, 186, 6);
  text-align: center;
  background: rgb(6, 204, 236);
  background: linear-gradient(
    62deg,
    rgba(6, 204, 236, 1) 0%,
    rgba(87, 15, 222, 1) 64%,
    rgba(128, 0, 255, 1) 100%
  );
  font-size: 2rem;
  padding: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* 
  setting footer styles, fonts, colors and sticking it to the bottom of app using postion: absolute and bottom: 0 
*/

.app > footer {
  position: absolute;
  bottom: 0;
  text-align: center;
  background: rgb(6, 204, 236);
  background: linear-gradient(
    62deg,
    rgba(6, 204, 236, 1) 0%,
    rgba(87, 15, 222, 1) 64%,
    rgba(128, 0, 255, 1) 100%
  );
  color: gold;
  font-size: 1.2rem;
  width: 100%;
}

/* 
  styling footer link so it wont be ugly and blue with underlines
*/

footer > a {
  text-decoration: none;
  color: gold;
}

/* 
  setting w,h and gap for elements in  content of the app (main part)
*/

.content {
  width: 100%;
  height: 80%;
  display: flex;
  gap: 2rem;
}

/* 
  setting styles, positioning in columns, spaces for the form

*/
.form {
  height: 100%;
  width: 50%;
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 3rem;
  justify-content: space-between;
}

/* 
  setting styles, positioning in columns, spaces for the result section

*/
.result {
  width: 50%;
  padding: 1.5rem;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
}

/* 
  giving the prediction section half of the column
*/
.prediction {
  height: 50%;
}

/* 
  giving the saved section half of the column and streching its elements in space-evenly way
*/
.saved {
  height: 50%;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
}

/* 
  giving some space and positioning buttons in the form section

*/

.buttons {
  display: flex;
  flex-direction: column;
  gap: 13px;
}

/* 
  proper styles for the error message
*/
.error {
  color: red;
  font-weight: 800;
}

/* 
  proper styles for the hiding elements
*/
.hide {
  display: none;
}

/* color for when we fetch prediction value */
.prediction_value {
  color: gold;
}

/* font styles for the probability value shown after fetch */
.prob {
  font-weight: bold;
}
